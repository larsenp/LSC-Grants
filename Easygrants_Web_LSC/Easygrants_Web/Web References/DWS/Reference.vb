'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.1433
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.1433.
'
Namespace DWS
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="DwsSoap", [Namespace]:="http://schemas.microsoft.com/sharepoint/soap/dws/")>  _
    Partial Public Class Dws
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private CreateDwsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteDwsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDwsMetaDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDwsDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateDwsDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RemoveDwsUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RenameDwsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FindDwsDocOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CanCreateDwsUrlOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateFolderOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteFolderOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.My.MySettings.Default.Easygrants_Web_DWS_Dws
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event CreateDwsCompleted As CreateDwsCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteDwsCompleted As DeleteDwsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDwsMetaDataCompleted As GetDwsMetaDataCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDwsDataCompleted As GetDwsDataCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateDwsDataCompleted As UpdateDwsDataCompletedEventHandler
        
        '''<remarks/>
        Public Event RemoveDwsUserCompleted As RemoveDwsUserCompletedEventHandler
        
        '''<remarks/>
        Public Event RenameDwsCompleted As RenameDwsCompletedEventHandler
        
        '''<remarks/>
        Public Event FindDwsDocCompleted As FindDwsDocCompletedEventHandler
        
        '''<remarks/>
        Public Event CanCreateDwsUrlCompleted As CanCreateDwsUrlCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateFolderCompleted As CreateFolderCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteFolderCompleted As DeleteFolderCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/dws/CreateDws", RequestNamespace:="http://schemas.microsoft.com/sharepoint/soap/dws/", ResponseNamespace:="http://schemas.microsoft.com/sharepoint/soap/dws/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateDws(ByVal name As String, ByVal users As String, ByVal title As String, ByVal documents As String) As String
            Dim results() As Object = Me.Invoke("CreateDws", New Object() {name, users, title, documents})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginCreateDws(ByVal name As String, ByVal users As String, ByVal title As String, ByVal documents As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CreateDws", New Object() {name, users, title, documents}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCreateDws(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateDwsAsync(ByVal name As String, ByVal users As String, ByVal title As String, ByVal documents As String)
            Me.CreateDwsAsync(name, users, title, documents, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateDwsAsync(ByVal name As String, ByVal users As String, ByVal title As String, ByVal documents As String, ByVal userState As Object)
            If (Me.CreateDwsOperationCompleted Is Nothing) Then
                Me.CreateDwsOperationCompleted = AddressOf Me.OnCreateDwsOperationCompleted
            End If
            Me.InvokeAsync("CreateDws", New Object() {name, users, title, documents}, Me.CreateDwsOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateDwsOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateDwsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateDwsCompleted(Me, New CreateDwsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/dws/DeleteDws", RequestNamespace:="http://schemas.microsoft.com/sharepoint/soap/dws/", ResponseNamespace:="http://schemas.microsoft.com/sharepoint/soap/dws/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteDws() As String
            Dim results() As Object = Me.Invoke("DeleteDws", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginDeleteDws(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("DeleteDws", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndDeleteDws(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteDwsAsync()
            Me.DeleteDwsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteDwsAsync(ByVal userState As Object)
            If (Me.DeleteDwsOperationCompleted Is Nothing) Then
                Me.DeleteDwsOperationCompleted = AddressOf Me.OnDeleteDwsOperationCompleted
            End If
            Me.InvokeAsync("DeleteDws", New Object(-1) {}, Me.DeleteDwsOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteDwsOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteDwsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteDwsCompleted(Me, New DeleteDwsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/dws/GetDwsMetaData", RequestNamespace:="http://schemas.microsoft.com/sharepoint/soap/dws/", ResponseNamespace:="http://schemas.microsoft.com/sharepoint/soap/dws/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDwsMetaData(ByVal document As String, ByVal id As String, ByVal minimal As Boolean) As String
            Dim results() As Object = Me.Invoke("GetDwsMetaData", New Object() {document, id, minimal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginGetDwsMetaData(ByVal document As String, ByVal id As String, ByVal minimal As Boolean, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetDwsMetaData", New Object() {document, id, minimal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetDwsMetaData(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDwsMetaDataAsync(ByVal document As String, ByVal id As String, ByVal minimal As Boolean)
            Me.GetDwsMetaDataAsync(document, id, minimal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDwsMetaDataAsync(ByVal document As String, ByVal id As String, ByVal minimal As Boolean, ByVal userState As Object)
            If (Me.GetDwsMetaDataOperationCompleted Is Nothing) Then
                Me.GetDwsMetaDataOperationCompleted = AddressOf Me.OnGetDwsMetaDataOperationCompleted
            End If
            Me.InvokeAsync("GetDwsMetaData", New Object() {document, id, minimal}, Me.GetDwsMetaDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDwsMetaDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDwsMetaDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDwsMetaDataCompleted(Me, New GetDwsMetaDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/dws/GetDwsData", RequestNamespace:="http://schemas.microsoft.com/sharepoint/soap/dws/", ResponseNamespace:="http://schemas.microsoft.com/sharepoint/soap/dws/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDwsData(ByVal document As String, ByVal lastUpdate As String) As String
            Dim results() As Object = Me.Invoke("GetDwsData", New Object() {document, lastUpdate})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginGetDwsData(ByVal document As String, ByVal lastUpdate As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetDwsData", New Object() {document, lastUpdate}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetDwsData(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDwsDataAsync(ByVal document As String, ByVal lastUpdate As String)
            Me.GetDwsDataAsync(document, lastUpdate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDwsDataAsync(ByVal document As String, ByVal lastUpdate As String, ByVal userState As Object)
            If (Me.GetDwsDataOperationCompleted Is Nothing) Then
                Me.GetDwsDataOperationCompleted = AddressOf Me.OnGetDwsDataOperationCompleted
            End If
            Me.InvokeAsync("GetDwsData", New Object() {document, lastUpdate}, Me.GetDwsDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDwsDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDwsDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDwsDataCompleted(Me, New GetDwsDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/dws/UpdateDwsData", RequestNamespace:="http://schemas.microsoft.com/sharepoint/soap/dws/", ResponseNamespace:="http://schemas.microsoft.com/sharepoint/soap/dws/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateDwsData(ByVal updates As String, ByVal meetingInstance As String) As String
            Dim results() As Object = Me.Invoke("UpdateDwsData", New Object() {updates, meetingInstance})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginUpdateDwsData(ByVal updates As String, ByVal meetingInstance As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("UpdateDwsData", New Object() {updates, meetingInstance}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndUpdateDwsData(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateDwsDataAsync(ByVal updates As String, ByVal meetingInstance As String)
            Me.UpdateDwsDataAsync(updates, meetingInstance, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateDwsDataAsync(ByVal updates As String, ByVal meetingInstance As String, ByVal userState As Object)
            If (Me.UpdateDwsDataOperationCompleted Is Nothing) Then
                Me.UpdateDwsDataOperationCompleted = AddressOf Me.OnUpdateDwsDataOperationCompleted
            End If
            Me.InvokeAsync("UpdateDwsData", New Object() {updates, meetingInstance}, Me.UpdateDwsDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateDwsDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateDwsDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateDwsDataCompleted(Me, New UpdateDwsDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/dws/RemoveDwsUser", RequestNamespace:="http://schemas.microsoft.com/sharepoint/soap/dws/", ResponseNamespace:="http://schemas.microsoft.com/sharepoint/soap/dws/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RemoveDwsUser(ByVal id As String) As String
            Dim results() As Object = Me.Invoke("RemoveDwsUser", New Object() {id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginRemoveDwsUser(ByVal id As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RemoveDwsUser", New Object() {id}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRemoveDwsUser(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RemoveDwsUserAsync(ByVal id As String)
            Me.RemoveDwsUserAsync(id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RemoveDwsUserAsync(ByVal id As String, ByVal userState As Object)
            If (Me.RemoveDwsUserOperationCompleted Is Nothing) Then
                Me.RemoveDwsUserOperationCompleted = AddressOf Me.OnRemoveDwsUserOperationCompleted
            End If
            Me.InvokeAsync("RemoveDwsUser", New Object() {id}, Me.RemoveDwsUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnRemoveDwsUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.RemoveDwsUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RemoveDwsUserCompleted(Me, New RemoveDwsUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/dws/RenameDws", RequestNamespace:="http://schemas.microsoft.com/sharepoint/soap/dws/", ResponseNamespace:="http://schemas.microsoft.com/sharepoint/soap/dws/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RenameDws(ByVal title As String) As String
            Dim results() As Object = Me.Invoke("RenameDws", New Object() {title})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginRenameDws(ByVal title As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RenameDws", New Object() {title}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRenameDws(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RenameDwsAsync(ByVal title As String)
            Me.RenameDwsAsync(title, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RenameDwsAsync(ByVal title As String, ByVal userState As Object)
            If (Me.RenameDwsOperationCompleted Is Nothing) Then
                Me.RenameDwsOperationCompleted = AddressOf Me.OnRenameDwsOperationCompleted
            End If
            Me.InvokeAsync("RenameDws", New Object() {title}, Me.RenameDwsOperationCompleted, userState)
        End Sub
        
        Private Sub OnRenameDwsOperationCompleted(ByVal arg As Object)
            If (Not (Me.RenameDwsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RenameDwsCompleted(Me, New RenameDwsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/dws/FindDwsDoc", RequestNamespace:="http://schemas.microsoft.com/sharepoint/soap/dws/", ResponseNamespace:="http://schemas.microsoft.com/sharepoint/soap/dws/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FindDwsDoc(ByVal id As String) As String
            Dim results() As Object = Me.Invoke("FindDwsDoc", New Object() {id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginFindDwsDoc(ByVal id As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("FindDwsDoc", New Object() {id}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndFindDwsDoc(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FindDwsDocAsync(ByVal id As String)
            Me.FindDwsDocAsync(id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FindDwsDocAsync(ByVal id As String, ByVal userState As Object)
            If (Me.FindDwsDocOperationCompleted Is Nothing) Then
                Me.FindDwsDocOperationCompleted = AddressOf Me.OnFindDwsDocOperationCompleted
            End If
            Me.InvokeAsync("FindDwsDoc", New Object() {id}, Me.FindDwsDocOperationCompleted, userState)
        End Sub
        
        Private Sub OnFindDwsDocOperationCompleted(ByVal arg As Object)
            If (Not (Me.FindDwsDocCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FindDwsDocCompleted(Me, New FindDwsDocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/dws/CanCreateDwsUrl", RequestNamespace:="http://schemas.microsoft.com/sharepoint/soap/dws/", ResponseNamespace:="http://schemas.microsoft.com/sharepoint/soap/dws/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CanCreateDwsUrl(ByVal url As String) As String
            Dim results() As Object = Me.Invoke("CanCreateDwsUrl", New Object() {url})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginCanCreateDwsUrl(ByVal url As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CanCreateDwsUrl", New Object() {url}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCanCreateDwsUrl(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CanCreateDwsUrlAsync(ByVal url As String)
            Me.CanCreateDwsUrlAsync(url, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CanCreateDwsUrlAsync(ByVal url As String, ByVal userState As Object)
            If (Me.CanCreateDwsUrlOperationCompleted Is Nothing) Then
                Me.CanCreateDwsUrlOperationCompleted = AddressOf Me.OnCanCreateDwsUrlOperationCompleted
            End If
            Me.InvokeAsync("CanCreateDwsUrl", New Object() {url}, Me.CanCreateDwsUrlOperationCompleted, userState)
        End Sub
        
        Private Sub OnCanCreateDwsUrlOperationCompleted(ByVal arg As Object)
            If (Not (Me.CanCreateDwsUrlCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CanCreateDwsUrlCompleted(Me, New CanCreateDwsUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/dws/CreateFolder", RequestNamespace:="http://schemas.microsoft.com/sharepoint/soap/dws/", ResponseNamespace:="http://schemas.microsoft.com/sharepoint/soap/dws/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateFolder(ByVal url As String) As String
            Dim results() As Object = Me.Invoke("CreateFolder", New Object() {url})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginCreateFolder(ByVal url As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CreateFolder", New Object() {url}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCreateFolder(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateFolderAsync(ByVal url As String)
            Me.CreateFolderAsync(url, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateFolderAsync(ByVal url As String, ByVal userState As Object)
            If (Me.CreateFolderOperationCompleted Is Nothing) Then
                Me.CreateFolderOperationCompleted = AddressOf Me.OnCreateFolderOperationCompleted
            End If
            Me.InvokeAsync("CreateFolder", New Object() {url}, Me.CreateFolderOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateFolderOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateFolderCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateFolderCompleted(Me, New CreateFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/dws/DeleteFolder", RequestNamespace:="http://schemas.microsoft.com/sharepoint/soap/dws/", ResponseNamespace:="http://schemas.microsoft.com/sharepoint/soap/dws/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteFolder(ByVal url As String) As String
            Dim results() As Object = Me.Invoke("DeleteFolder", New Object() {url})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginDeleteFolder(ByVal url As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("DeleteFolder", New Object() {url}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndDeleteFolder(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteFolderAsync(ByVal url As String)
            Me.DeleteFolderAsync(url, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteFolderAsync(ByVal url As String, ByVal userState As Object)
            If (Me.DeleteFolderOperationCompleted Is Nothing) Then
                Me.DeleteFolderOperationCompleted = AddressOf Me.OnDeleteFolderOperationCompleted
            End If
            Me.InvokeAsync("DeleteFolder", New Object() {url}, Me.DeleteFolderOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteFolderOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteFolderCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteFolderCompleted(Me, New DeleteFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")>  _
    Public Delegate Sub CreateDwsCompletedEventHandler(ByVal sender As Object, ByVal e As CreateDwsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateDwsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")>  _
    Public Delegate Sub DeleteDwsCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteDwsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteDwsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")>  _
    Public Delegate Sub GetDwsMetaDataCompletedEventHandler(ByVal sender As Object, ByVal e As GetDwsMetaDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDwsMetaDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")>  _
    Public Delegate Sub GetDwsDataCompletedEventHandler(ByVal sender As Object, ByVal e As GetDwsDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDwsDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")>  _
    Public Delegate Sub UpdateDwsDataCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateDwsDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateDwsDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")>  _
    Public Delegate Sub RemoveDwsUserCompletedEventHandler(ByVal sender As Object, ByVal e As RemoveDwsUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RemoveDwsUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")>  _
    Public Delegate Sub RenameDwsCompletedEventHandler(ByVal sender As Object, ByVal e As RenameDwsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RenameDwsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")>  _
    Public Delegate Sub FindDwsDocCompletedEventHandler(ByVal sender As Object, ByVal e As FindDwsDocCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FindDwsDocCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")>  _
    Public Delegate Sub CanCreateDwsUrlCompletedEventHandler(ByVal sender As Object, ByVal e As CanCreateDwsUrlCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CanCreateDwsUrlCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")>  _
    Public Delegate Sub CreateFolderCompletedEventHandler(ByVal sender As Object, ByVal e As CreateFolderCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateFolderCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")>  _
    Public Delegate Sub DeleteFolderCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteFolderCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteFolderCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
