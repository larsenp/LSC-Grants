'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.42.
'
Namespace agdevweb2
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="SXSBinding", [Namespace]:="http://AGDEVWEB2/EG2WS/sws")>  _
    Partial Public Class sws
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private wsTest1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "http://AGDEVWEB2/EG2WS/sws"
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event wsTest1Completed As wsTest1CompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AGDEVWEB2/EG2WS/sws/wsTest1", RequestNamespace:="http://AGDEVWEB2/EG2WS/sws", ResponseNamespace:="http://AGDEVWEB2/EG2WS/sws", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function wsTest1(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal param1 As System.Nullable(Of Integer), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal param1Specified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal param2 As System.Nullable(Of Integer), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal param2Specified As Boolean) As <System.Xml.Serialization.XmlArrayItemAttribute(GetType(SqlMessage), [Namespace]:="http://schemas.microsoft.com/SQLServer/2001/12/SOAP/types/SqlResultStream", IsNullable:=false), System.Xml.Serialization.XmlArrayItemAttribute("SqlResultCode", GetType(Integer), [Namespace]:="http://schemas.microsoft.com/SQLServer/2001/12/SOAP/types/SqlResultStream", IsNullable:=false), System.Xml.Serialization.XmlArrayItemAttribute("SqlRowSet", GetType(System.Data.DataSet), [Namespace]:="http://schemas.microsoft.com/SQLServer/2001/12/SOAP/types/SqlResultStream", IsNullable:=false), System.Xml.Serialization.XmlArrayItemAttribute("SqlXml", GetType(System.Xml.XmlNode), [Namespace]:="http://schemas.microsoft.com/SQLServer/2001/12/SOAP/types/SqlResultStream", IsNullable:=false)> Object()
            Dim results() As Object = Me.Invoke("wsTest1", New Object() {param1, param1Specified, param2, param2Specified})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Function BeginwsTest1(ByVal param1 As System.Nullable(Of Integer), ByVal param1Specified As Boolean, ByVal param2 As System.Nullable(Of Integer), ByVal param2Specified As Boolean, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("wsTest1", New Object() {param1, param1Specified, param2, param2Specified}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndwsTest1(ByVal asyncResult As System.IAsyncResult) As Object()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub wsTest1Async(ByVal param1 As System.Nullable(Of Integer), ByVal param1Specified As Boolean, ByVal param2 As System.Nullable(Of Integer), ByVal param2Specified As Boolean)
            Me.wsTest1Async(param1, param1Specified, param2, param2Specified, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub wsTest1Async(ByVal param1 As System.Nullable(Of Integer), ByVal param1Specified As Boolean, ByVal param2 As System.Nullable(Of Integer), ByVal param2Specified As Boolean, ByVal userState As Object)
            If (Me.wsTest1OperationCompleted Is Nothing) Then
                Me.wsTest1OperationCompleted = AddressOf Me.OnwsTest1OperationCompleted
            End If
            Me.InvokeAsync("wsTest1", New Object() {param1, param1Specified, param2, param2Specified}, Me.wsTest1OperationCompleted, userState)
        End Sub
        
        Private Sub OnwsTest1OperationCompleted(ByVal arg As Object)
            If (Not (Me.wsTest1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent wsTest1Completed(Me, New wsTest1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/SQLServer/2001/12/SOAP/types/SqlMessage")>  _
    Partial Public Class SqlMessage
        
        Private classField As Integer
        
        Private lineNumberField As Integer
        
        Private messageField As String
        
        Private numberField As Integer
        
        Private procedureField As String
        
        Private serverField As String
        
        Private sourceField As String
        
        Private stateField As Integer
        
        Private isNestedField As Boolean
        
        Private isNestedFieldSpecified As Boolean
        
        '''<remarks/>
        Public Property [Class]() As Integer
            Get
                Return Me.classField
            End Get
            Set
                Me.classField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LineNumber() As Integer
            Get
                Return Me.lineNumberField
            End Get
            Set
                Me.lineNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Message() As String
            Get
                Return Me.messageField
            End Get
            Set
                Me.messageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Number() As Integer
            Get
                Return Me.numberField
            End Get
            Set
                Me.numberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Procedure() As String
            Get
                Return Me.procedureField
            End Get
            Set
                Me.procedureField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Server() As String
            Get
                Return Me.serverField
            End Get
            Set
                Me.serverField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Source() As String
            Get
                Return Me.sourceField
            End Get
            Set
                Me.sourceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property State() As Integer
            Get
                Return Me.stateField
            End Get
            Set
                Me.stateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Qualified, [Namespace]:="http://schemas.microsoft.com/SQLServer/2001/12/SOAP/types")>  _
        Public Property IsNested() As Boolean
            Get
                Return Me.isNestedField
            End Get
            Set
                Me.isNestedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property IsNestedSpecified() As Boolean
            Get
                Return Me.isNestedFieldSpecified
            End Get
            Set
                Me.isNestedFieldSpecified = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub wsTest1CompletedEventHandler(ByVal sender As Object, ByVal e As wsTest1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class wsTest1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
End Namespace
